[{"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\index.js":"1","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reportWebVitals.js":"2","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\App.js":"3","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\store.js":"4","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reducers\\index.js":"5","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reducers\\todo.js":"6","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\pages\\HomePages.jsx":"7","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\AddTodo\\index.jsx":"8","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\ListTodo\\index.jsx":"9","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\actions\\todo.js":"10","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reducers\\isDisplayForm.js":"11","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\Progress\\index.jsx":"12","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\ListTodoComple\\index.jsx":"13"},{"size":618,"mtime":1607309691391,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":163,"mtime":1607673799393,"results":"17","hashOfConfig":"15"},{"size":146,"mtime":1607306102931,"results":"18","hashOfConfig":"15"},{"size":318,"mtime":1607483342585,"results":"19","hashOfConfig":"15"},{"size":2420,"mtime":1607674401885,"results":"20","hashOfConfig":"15"},{"size":754,"mtime":1607682158264,"results":"21","hashOfConfig":"15"},{"size":3571,"mtime":1607569645426,"results":"22","hashOfConfig":"15"},{"size":8853,"mtime":1607682731329,"results":"23","hashOfConfig":"15"},{"size":783,"mtime":1607585153049,"results":"24","hashOfConfig":"15"},{"size":384,"mtime":1607415830832,"results":"25","hashOfConfig":"15"},{"size":1056,"mtime":1607673772740,"results":"26","hashOfConfig":"15"},{"size":4607,"mtime":1607672562466,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1c1hbny",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\index.js",[],["57","58"],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reportWebVitals.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\App.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\store.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reducers\\index.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reducers\\todo.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\pages\\HomePages.jsx",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\AddTodo\\index.jsx",["59","60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, DatePicker, notification, Modal } from \"antd\";\r\nimport { addNewTodo, closeForm, openForm } from \"../../actions/todo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AddTodo.css\";\r\nimport { TagsOutlined ,PlusCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst randomNumber = () => {\r\n  return 1000 + Math.trunc(Math.random() * 9000);\r\n};\r\n\r\nfunction formatDay(dateInput) {\r\n  const date = dateInput;\r\n  var dd = date.getDate();\r\n  var mm = date.getMonth() + 1;\r\n  var yyyy = date.getFullYear();\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm;\r\n  }\r\n  var today = dd + \"/\" + mm + \"/\" + yyyy;\r\n  var dayFormat = today.toString().split(\"/\").reverse().join(\"-\");\r\n  return dayFormat;\r\n}\r\n\r\nfunction AddTodo(props) {\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState(\"Content of the modal\");\r\n  const dispatch = useDispatch();\r\n\r\n  const openNotification = (placement) => {\r\n    notification.info({\r\n      message: `TODO added`,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    const title = values.todo.title;\r\n    const date = values.todo.date._d;\r\n    const dayFormat = formatDay(date);\r\n    const newId = randomNumber();\r\n    const newTodo = {\r\n      id: newId,\r\n      title: title,\r\n      date: dayFormat,\r\n      deActive: 0,\r\n    };\r\n    const action = addNewTodo(newTodo);\r\n    dispatch(action);\r\n    openNotification(\"bottomLeft\");\r\n    setVisible(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n<PlusCircleOutlined />\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal} icon={<PlusCircleOutlined />} > \r\n             ADD TODO    \r\n      </Button >\r\n      <Modal\r\n        className=\"title-formPopup\"\r\n        title=\"ADD TODO\"\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          layout=\"inline\"\r\n          name=\"nest-messages\"\r\n          onFinish={onSubmit}\r\n          form={form}\r\n        >\r\n          <div className=\"selection-are\">\r\n            <Form.Item\r\n              name={[\"todo\", \"title\"]}\r\n              label=\"Title :\"\r\n              rules={[\r\n                { required: true, message: \"Please input your title!\" },\r\n                { min: 5, message: \"Title must be minimum 5 characters.\" },\r\n              ]}\r\n              // onChange={(e) => onChangeTitle(e)}\r\n            >\r\n              <Input prefix={<TagsOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={[\"todo\", \"date\"]}\r\n              label=\"Select a day :\"\r\n              rules={[{ required: true, message: \"Please input your day!\" }]}\r\n            >\r\n              <DatePicker />\r\n            </Form.Item>\r\n          </div>\r\n          <div className=\"btn-add-todo\">\r\n            <Form.Item shouldUpdate={true}>\r\n              {() => (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  ADD TODO\r\n                </Button>\r\n              )}\r\n            </Form.Item>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\ListTodo\\index.jsx",["68","69","70","71","72","73","74"],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\actions\\todo.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\reducers\\isDisplayForm.js",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\Progress\\index.jsx",[],"F:\\Learn Javaa\\Aptech\\ReactJS\\pet-project2\\petproject2\\src\\component\\ListTodoComple\\index.jsx",["75"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Table, Popconfirm, notification, Checkbox } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"./ListTodoComple.css\";\r\nimport { deleteTodo, reworkTodo } from \"../../actions/todo\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport arrayMove from \"array-move\";\r\n\r\nfunction ListTodoComple(props) {\r\n  const dispatch = useDispatch();\r\n  const listTodoComple = useSelector((state) =>\r\n    state.todo.todoList.filter((todo) => todo.id === todo.deActive)\r\n  );\r\n\r\n  const DragHandle = sortableHandle(() => (\r\n    <MenuOutlined style={{ cursor: \"pointer\", color: \"#999\" }} />\r\n  ));\r\n\r\n  const data = listTodoComple.map((x, index) => ({\r\n    index,\r\n    ...x,\r\n  }));\r\n\r\n  const SortableItem = sortableElement((props) => <tr {...props} />);\r\n  const SortableContainer = sortableContainer((props) => <tbody {...props} />);\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setDataSource(data);\r\n    console.log(\"useEfffect\");\r\n  }, [listTodoComple.length]);\r\n\r\n  console.log(\"data List:\", dataSource);\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    if (oldIndex !== newIndex) {\r\n      const newData = arrayMove(\r\n        [].concat(dataSource),\r\n        oldIndex,\r\n        newIndex\r\n      ).filter((el) => !!el);\r\n      console.log(\"Sorted items: \", newData);\r\n      setDataSource(newData);\r\n    }\r\n  };\r\n\r\n  const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n    // function findIndex base on Table rowKey props and should always be a right array index\r\n    const index = dataSource.findIndex(\r\n      (x) => x.index === restProps[\"data-row-key\"]\r\n    );\r\n    return <SortableItem index={index} {...restProps} />;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Sort\",\r\n      dataIndex: \"sort\",\r\n      width: 30,\r\n      className: \"drag-visible\",\r\n      render: () => <DragHandle />,\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      key: \"title\",\r\n      render: (record) => (\r\n        <Checkbox onClick={(e) => handleCheckBox(e, record)}>\r\n          <h4 className=\"active\">{record.title}</h4>\r\n        </Checkbox>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      key: \"date\",\r\n      render: (record) => <h4 className=\"active\">{record.date}</h4>,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      render: (record) => (\r\n        <div className=\"action-btn\">\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this todo?\"\r\n            onConfirm={() => confirm(record)}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"Cancel\"\r\n          >\r\n            <Button\r\n              type=\"button\"\r\n              className=\"ant-btn ant-btn-primary ant-btn-dangerous\"\r\n              href=\"#\"\r\n              icon={<DeleteOutlined />}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const openNotificationDelete = (placement) => {\r\n    notification.info({\r\n      message: `TODO delete  `,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  const openNotification = (placement) => {\r\n    notification.info({\r\n      message: `REWORK  `,\r\n      placement,\r\n    });\r\n  };\r\n\r\n  function confirm(record) {\r\n    console.log(\"record confirm todocomplete\", record);\r\n    openNotificationDelete(\"bottomLeft\");\r\n    const action = deleteTodo(record);\r\n    dispatch(action);\r\n  }\r\n\r\n  function cancel() {}\r\n\r\n  function handleCheckBox(e, record) {\r\n    console.log(\"e title:\", e.target.checked);\r\n    console.log(\"record title:\", record);\r\n    if (e.target.checked === true) {\r\n      openNotification(\"bottomLeft\");\r\n      const action = reworkTodo(record);\r\n      dispatch(action);\r\n      e.target.checked = false;\r\n    }\r\n  }\r\n\r\n  const DraggableContainer = (props) => (\r\n    <SortableContainer\r\n      useDragHandle\r\n      helperClass=\"row-dragging\"\r\n      onSortEnd={onSortEnd}\r\n      {...props}\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      <Table\r\n        pagination={{\r\n          defaultPageSize: 5,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: [\"3\", \"6\"],\r\n        }}\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        rowKey=\"index\"\r\n        components={{\r\n          body: {\r\n            wrapper: DraggableContainer,\r\n            row: DraggableBodyRow,\r\n          },\r\n        }}\r\n        size=\"middle\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListTodoComple;\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"84","line":4,"column":22,"nodeType":"82","messageId":"83","endLine":4,"endColumn":31},{"ruleId":"80","severity":1,"message":"85","line":4,"column":33,"nodeType":"82","messageId":"83","endLine":4,"endColumn":41},{"ruleId":"80","severity":1,"message":"86","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":21},{"ruleId":"80","severity":1,"message":"87","line":32,"column":12,"nodeType":"82","messageId":"83","endLine":32,"endColumn":23},{"ruleId":"80","severity":1,"message":"88","line":34,"column":10,"nodeType":"82","messageId":"83","endLine":34,"endColumn":24},{"ruleId":"80","severity":1,"message":"89","line":34,"column":26,"nodeType":"82","messageId":"83","endLine":34,"endColumn":43},{"ruleId":"80","severity":1,"message":"90","line":35,"column":10,"nodeType":"82","messageId":"83","endLine":35,"endColumn":19},{"ruleId":"80","severity":1,"message":"91","line":35,"column":21,"nodeType":"82","messageId":"83","endLine":35,"endColumn":33},{"ruleId":"80","severity":1,"message":"92","line":44,"column":7,"nodeType":"82","messageId":"83","endLine":44,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":94,"column":6,"nodeType":"95","endLine":94,"endColumn":34,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":94,"column":7,"nodeType":"98","endLine":94,"endColumn":33},{"ruleId":"80","severity":1,"message":"99","line":122,"column":9,"nodeType":"82","messageId":"83","endLine":122,"endColumn":14},{"ruleId":"80","severity":1,"message":"100","line":125,"column":9,"nodeType":"82","messageId":"83","endLine":125,"endColumn":22},{"ruleId":"80","severity":1,"message":"101","line":137,"column":9,"nodeType":"82","messageId":"83","endLine":137,"endColumn":21},{"ruleId":"80","severity":1,"message":"102","line":298,"column":12,"nodeType":"82","messageId":"83","endLine":298,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":37,"column":6,"nodeType":"95","endLine":37,"endColumn":29,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'closeForm' is defined but never used.","'openForm' is defined but never used.","'useSelector' is defined but never used.","'forceUpdate' is assigned a value but never used.","'confirmLoading' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","'modalText' is assigned a value but never used.","'setModalText' is assigned a value but never used.","'layout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'state' is assigned a value but never used.","'onChangeTitle' is assigned a value but never used.","'onChangeDate' is assigned a value but never used.","'showRecord' is defined but never used.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [data]",{"range":"112","text":"113"},"Update the dependencies array to be: [data, listTodoComple.length]",{"range":"114","text":"115"},[2257,2285],"[data]",[1215,1238],"[data, listTodoComple.length]"]